@use "sass:map";
@use "sass:math";
@use "../utilities/colors" as *;
@use "../utilities/mixins" as *;
@use "../utilities/variables";

/// @access private
/// @group private-members
/// @type Number
// $_controller-width: 6rem;
$_controller-width: variables.$header-height;

/// @access private
/// @group private-members
/// @type Number
$_controller-height: 1.5rem;

/// Variable defining controllers circle-checkboox position (checked).
/// @access private
/// @group private-members
/// @type Number
$_controller-pos-checked: calc(#{$_controller-width} - #{$_controller-height});

.controller {
  &__label {
    color: map.get($yellows, "2");
    cursor: pointer;
    font-size: 0.75rem;
    left: calc((100vw - var(--content-width)) / 2);
    margin: auto;
    padding: 0.5rem;
    position: absolute;
    top: variables.$body-top-margin + variables.$header-height - 2rem;
    transition: left 0.2s ease-in-out;
    z-index: 9;
  }

  &__input[type="checkbox"] {
    @include box-shadows($state: "normal", $color: $grey4);

    align-items: center;
    appearance: none;
    background-color: $grey2;
    border-radius: math.div($_controller-height, 2);
    display: flex;
    height: $_controller-height;
    left: calc(50% + var(--content-width) / 2 - #{$_controller-height} / 2);
    margin: 0;
    position: fixed;
    // prettier-ignore
    top: calc($_controller-width - $_controller-height / 2 + variables.$body-top-margin);
    transform: rotateZ(45deg);
    transform-origin: calc(#{$_controller-height} / 2);
    transition: all ease-in 0.2s;
    width: $_controller-width;
    z-index: 9;

    // AFTER - controller button

    &::after {
      @include box-shadows($state: "normal", $color: $grey4);

      background-color: $white;
      border-radius: 50%;
      content: "";
      height: #{$_controller-height};
      position: absolute;
      transition: left ease-in 0.2s;
      transition-delay: 0.1s;
      width: $_controller-height;
    }

    // BEFORE - label

    &::before {
      color: $white;
      content: attr(data-label);
      font-size: 0.75rem;
      font-weight: 200;
      letter-spacing: 1px;
      margin-right: 0.5rem;
      text-align: right;
      transition: opacity 0.2s;
      width: 100%;
    }

    &:hover {
      @include box-shadows($state: "hover");
    }

    &:focus {
      @include box-shadows($state: "focus");

      &::after {
        @include box-shadows($state: "normal", $color: $main);
      }
    }

    &:disabled {
      @include box-shadows($state: "normal", $color: $grey2);

      background-color: $grey1;
      cursor: inherit;
    }

    &:checked {
      background-color: $main;
      box-shadow: none;
      justify-content: initial;
      transform: rotateZ(-45deg);

      &,
      ~ * {
        --content-width: 60rem;
      }

      &:hover {
        @include box-shadows($state: "hover");
      }

      &:focus {
        @include box-shadows($state: "focus");
      }

      &::before {
        opacity: 1;
      }

      &::after {
        @include box-shadows($state: "normal", $color: $main);

        left: 0;
      }

      ~ .main {
        .header {
          &__unchecked {
            display: none;
          }

          &__checked {
            display: block;
          }
        }

        .controller__label {
          top: -2rem;
        }

        .content__img {
          opacity: 0;
          transition: 2s opacity;
          transition-delay: 10s;
        }

        &::after {
          opacity: 1;
        }
      }
    }

    // stylelint-disable no-descending-specificity

    &:not(:checked) {
      &,
      ~ * {
        --content-width: 50rem;
      }

      ~ .main .header__checked {
        display: none;
      }
      // stylelint-enable no-descending-specificity

      &::before {
        opacity: 0;
      }

      &::after {
        left: $_controller-pos-checked;
      }

      &:hover::after,
      &:focus::after {
        @include box-shadows($state: "normal", $color: $grey4);
      }

      &:disabled {
        &::before,
        &::after {
          content: none;
        }
      }
    }

    &:disabled:checked {
      @include box-shadows($state: "normal", $color: $grey2);

      background-color: $grey1;

      &::before {
        color: $grey3;
      }

      &::after,
      &:hover::after,
      &:focus::after {
        @include box-shadows($state: "normal", $color: $grey2);
      }
    }
  }
}
