@use "sass:string";
@use "sass:math";
/// Replace `$search` with `$replace` in `$string`.
/// @author Hugo Giraudel
/// @link https://css-tricks.com/snippets/sass/str-replace-function/
/// @param {String} $string - Initial string
/// @param {String} $search - Substring to replace
/// @param {String} $replace ('') - New value
/// @return {String} - Updated string

@function str-replace($string, $search, $replace: "") {
  $index: string.index($string, $search);

  // prettier-ignore

  @if $index {
    @return string.slice($string, 1, $index - 1) + $replace + str-replace(
      string.slice($string, $index + string.length($search)),
      $search,
      $replace
    );
  }

  @return $string;
}

/// A small function allowing skipping base64 encoding and simply pasting the SVG markup right in the CSS.
/// @author Jakob Eriksen
/// @link http://codepen.io/jakob-e/pen/doMoML
/// @param {String} $svg - SVG image to encode
/// @return {String} - Encoded SVG data uri

@function svg-url($svg) {
  $encoded: "";
  $slice: 2000;
  $index: 0;
  $loops: math.ceil(math.div(string.length($svg), $slice));

  @for $i from 1 through $loops {
    $chunk: string.slice($svg, $index, $index + $slice - 1);
    $chunk: str-replace($chunk, '"', "'");
    $chunk: str-replace($chunk, "<", "%3C");
    $chunk: str-replace($chunk, ">", "%3E");
    $chunk: str-replace($chunk, "&", "%26");
    $chunk: str-replace($chunk, "#", "%23");
    $encoded: #{$encoded}#{$chunk};
    $index: $index + $slice;
  }

  @return url("data:image/svg+xml;charset=utf8,#{$encoded}");
}

/// Function to create background images from icons. Using it you are able to get an icon with desired color.
/// @author Kinaly
/// @link https://codepen.io/Kinaly/details/OMNQpY
/// @param {String} $svg string representing svg icon file
/// @param {String} $fill-to-replace color to be replaced in svg
/// @param {String} $new-fill new replacement color

@function svg-url-with-replaced-fill(
  $svg,
  $new-fill,
  $fill-to-replace: "#000000"
) {
  $replaced-svg: str-replace($svg, $fill-to-replace, $new-fill);
  $replaced-svg-url: svg-url("#{$replaced-svg}");

  @return $replaced-svg-url;
}

$accessibility: '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 32 32"><path fill="#000000" d="M15.176 9.65c1.682 0 3.047 1.365 3.047 3.047v0 7.11l4.063 0c1.096 0 2.104 0.589 2.645 1.532v0l0.081 0.152 3.047 6.094c0.754 1.505 0.143 3.336-1.362 4.089s-3.336 0.143-4.090-1.363v0l-2.206-4.411-5.226 0c-1.628 0-2.959-1.278-3.043-2.886v0l-0.004-0.162v-10.158c0-1.682 1.365-3.047 3.047-3.047zM9.961 15.309c0.28 0.486 0.114 1.107-0.372 1.388-3.402 1.964-4.567 6.313-2.604 9.714s6.313 4.567 9.714 2.604c0.486-0.28 1.107-0.114 1.388 0.372s0.114 1.107-0.372 1.388c-4.373 2.525-9.965 1.026-12.49-3.347s-1.026-9.965 3.347-12.49c0.486-0.28 1.107-0.114 1.388 0.372zM15.176 11.682c-0.56 0-1.016 0.455-1.016 1.016v0 10.158c0 0.56 0.455 1.016 1.016 1.016v0h5.854c0.385 0 0.736 0.217 0.909 0.561v0l2.486 4.972c0.252 0.503 0.862 0.706 1.363 0.455 0.503-0.252 0.706-0.862 0.455-1.364v0l-3.047-6.095c-0.172-0.344-0.524-0.561-0.909-0.561v0h-5.079c-0.561 0-1.016-0.455-1.016-1.016v0-8.126c0-0.56-0.455-1.016-1.016-1.016zM15.176 0c2.525 0 4.571 2.046 4.571 4.571s-2.046 4.571-4.571 4.571c-2.525 0-4.571-2.046-4.571-4.571s2.046-4.571 4.571-4.571zM15.176 2.032c-1.403 0-2.539 1.137-2.539 2.539s1.137 2.539 2.539 2.539c1.403 0 2.539-1.137 2.539-2.539s-1.137-2.539-2.539-2.539z" /></svg>';
$activities: '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 32 32"><path fill="#000000" d="M28.8 0c1.767 0 3.2 1.433 3.2 3.2v0 25.6c0 1.767-1.433 3.2-3.2 3.2v0h-25.6c-1.767 0-3.2-1.433-3.2-3.2v0-25.6c0-1.767 1.433-3.2 3.2-3.2v0zM14.932 10.666h-12.8l0.001 18.134c0 0.53 0.387 0.97 0.894 1.053l0.173 0.014 11.732-0.001v-19.2zM29.866 10.666h-12.8v19.2l11.734 0.001c0.53 0 0.97-0.387 1.053-0.894l0.014-0.173-0.001-18.134zM28.8 2.133h-25.6c-0.588 0-1.067 0.478-1.067 1.067v0l-0.001 5.332h27.734l0.001-5.332c0-0.53-0.387-0.97-0.894-1.053l-0.173-0.014z" /></svg>';
$zoom: '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 299.998 299.998" ><path fill="#000000" d="M139.414,96.193c-22.673,0-41.056,18.389-41.056,41.062c0,22.678,18.383,41.062,41.056,41.062 c22.678,0,41.059-18.383,41.059-41.062C180.474,114.582,162.094,96.193,139.414,96.193z M159.255,146.971h-12.06v12.06 c0,4.298-3.483,7.781-7.781,7.781c-4.298,0-7.781-3.483-7.781-7.781v-12.06h-12.06c-4.298,0-7.781-3.483-7.781-7.781 c0-4.298,3.483-7.781,7.781-7.781h12.06v-12.063c0-4.298,3.483-7.781,7.781-7.781c4.298,0,7.781,3.483,7.781,7.781v12.063h12.06 c4.298,0,7.781,3.483,7.781,7.781C167.036,143.488,163.555,146.971,159.255,146.971z"/><path fill="#000000" d="M149.997,0C67.157,0,0.001,67.158,0.001,149.995s67.156,150.003,149.995,150.003s150-67.163,150-150.003 S232.836,0,149.997,0z M225.438,221.254c-2.371,2.376-5.48,3.561-8.59,3.561s-6.217-1.185-8.593-3.561l-34.145-34.147 c-9.837,6.863-21.794,10.896-34.697,10.896c-33.548,0-60.742-27.196-60.742-60.744c0-33.548,27.194-60.742,60.742-60.742 c33.548,0,60.744,27.194,60.744,60.739c0,11.855-3.408,22.909-9.28,32.256l34.56,34.562 C230.185,208.817,230.185,216.512,225.438,221.254z"/></svg>';
